From: Davide Italiano <dccitaliano@gmail.com>
Newsgroups: gmane.comp.file-systems.btrfs
Subject: [PATCH] Btrfs: Improve FL_KEEP_SIZE handling in fallocate.
Date: Mon,  6 Apr 2015 22:09:15 -0700
Archived-At: <http://permalink.gmane.org/gmane.comp.file-systems.btrfs/44192>

- We call inode_size_ok() only if FL_KEEP_SIZE isn't specified.
- As an optimisation we can skip the call if (off + len)
  isn't greater than the current size of the file. This operation
  is called under the lock so the less work we do, the better.
- If we call inode_size_ok() pass to it the correct value rather
  than a more conservative estimation.

Signed-off-by: Davide Italiano <dccitaliano@gmail.com>
---
 fs/btrfs/file.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/fs/btrfs/file.c b/fs/btrfs/file.c
index 30982bb..f649bfc 100644
--- a/fs/btrfs/file.c
+++ b/fs/btrfs/file.c
@@ -2586,9 +2586,13 @@ static long btrfs_fallocate(struct file *file, int mode,
 	}
 
 	mutex_lock(&inode->i_mutex);
-	ret = inode_newsize_ok(inode, alloc_end);
-	if (ret)
-		goto out;
+
+	if (!(mode & FALLOC_FL_KEEP_SIZE) &&
+	    offset + len > inode->i_size) {
+		ret = inode_newsize_ok(inode, offset + len);
+		if (ret)
+			goto out;
+	}
 
 	if (alloc_start > inode->i_size) {
 		ret = btrfs_cont_expand(inode, i_size_read(inode),
-- 
2.3.4
